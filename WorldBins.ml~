open Core.Std
open BinI

let count : int = ref 0

let mark : int = ref 0

let binslist : bin list = []


(** Clear out all objects from the world. *)
let reset () : unit =
  binslist <- []

(** Add bin list to contain a new list of objects. *)
let add (b:bin list) : unit =
  incr count;
  binslist <- b :: binslist
		
(** get bin list to right side of binslist. *)			
let get_right () : bin list option =
  if !mark < !count
  then(
    match binslist with
    | [] -> None
    | _ -> 
       let x = !mark in
       incr mark;
       List.nth binslist x
  else
    None

(** get bin list to left side of binslist. *)			
let get_left () : bin list option =
  if !mark < !count && !mark > 0
  then(
    match binslist with
    | [] -> None
    | _ -> 
       decr mark;
       List.nth binslist !mark
  else
    None
