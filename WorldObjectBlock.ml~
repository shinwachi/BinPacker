open Core.Std
open WorldObjectI
open MatrixI

(** An abstract implementation of world_object_i that provides some helper
    functionality.

    All world_object objects add themselves to the world at point initial_p upon
    creation. *)
class world_object_matrix (initial_p: int*int) ( m : BoolMatrix.matrix) : world_object_i =
object (self)

  inherit WorldObject.world_object initial_p m

  val matrix : (int * int * bool) list = BoolMatrix.get_all m

  val mutable color : int = Random.int 0xffffff

 method private draw_rectangle bg fg text =
    let row_column : (int * int) = Helpers.no_row_column matrix in
    Draw.rectangle_m self#get_pos self#get_width self#get_height 
		     matrix row_column bg fg text

  method! get_name = "pobj!!"

  method! draw = self#draw_rectangle color Graphics.black "Matrix"

  method! draw_z_axis = 2

end

(*******Garbage Dump*********)

(*  method private draw_rectangle bg fg text =
    let row_column : (int * int) = Helpers.no_row_column matrix in
    if Helpers.alltrue matrix 
    then 
      Draw.rectangle self#get_pos self#get_width self#get_height bg fg text
    else
      Draw.rectangle_m self#get_pos self#get_width self#get_height 
		       matrix row_column bg fg text
 *)


